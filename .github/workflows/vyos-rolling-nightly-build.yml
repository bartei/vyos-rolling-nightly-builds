name: VyOS LTS nightly build

on:
#  schedule:
#    - cron: "0 0 * * *"

  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Set VyOS version
        id: set_vyos_version
        run: |
          echo "VYOS_VERSION=curx-LTS-$(date -u +%Y%m%d%H%M)" >> $GITHUB_ENV

      - uses: actions/checkout@v3

#      - name: Update latest_build.txt
#        run: echo $(date -u +%Y%m%d%H%M) > $GITHUB_WORKSPACE/latest_build.txt
#
#      - name: Create autocommit and tag
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          tagging_message: ${{ env.VYOS_VERSION }}
#          commit_message: ${{ env.VYOS_VERSION }}

      - name: Git clone vyos-build
        run: git clone -b crux --single-branch https://github.com/vyos/vyos-build

#      - name: Build ISO (for Smoketests)
#        run: |
#          docker run --rm --privileged -v ./vyos-build/:/vyos -w /vyos vyos/vyos-build:current sudo --preserve-env ./build-vyos-image --architecture amd64 --build-by "autobuild@vyos.net" --vyos-mirror https://rolling-packages.vyos.net/current/ --debian-mirror http://deb.debian.org/debian/ --build-type release --custom-package vyos-1x-smoketest --version "${VYOS_VERSION}" iso

#      - name: Run smoketests
#        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
#        env:
#          VYOS_VERSION: ${{ env.VYOS_VERSION }}
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          user: ${{ secrets.SSH_USER }}
#          port: ${{ secrets.SSH_PORT }}
#          key: ${{ secrets.SSH_KEY }}
#          connect_timeout: 10s
#          first_ssh: |
#            rm -rf vyos-build || true
#            git clone -b current --single-branch https://github.com/vyos/vyos-build
#            mkdir -p ~/vyos-build/build/
#          scp: |
#            './vyos-build/build/live-image-amd64.hybrid.iso' => '~/vyos-build/build/'
#          last_ssh: |
#            docker run --rm --privileged -v ~/vyos-build:/vyos -w /vyos vyos/vyos-build:current sudo make test
#            docker run --rm --privileged -v ~/vyos-build:/vyos -w /vyos vyos/vyos-build:current sudo make testc
#            docker run --rm --privileged -v ~/vyos-build:/vyos -w /vyos vyos/vyos-build:current sudo rm -rf ./*
#            rm -rf ~/vyos-build

#      - name: Build ISO
#        run: |
#          docker run --rm --privileged -v ./vyos-build/:/vyos -w /vyos vyos/vyos-build:current sudo --preserve-env ./build-vyos-image --architecture amd64 --build-by "bartei81@gmail.com" --vyos-mirror https://rolling-packages.vyos.net/current/ --debian-mirror http://deb.debian.org/debian/ --build-type release --version "${VYOS_VERSION}" iso

#      - name: Copy ISO
#        run: |
#          cp ./vyos-build/build/live-image-amd64.hybrid.iso ./vyos-$VYOS_VERSION-amd64.iso

      - name: Build openstack
        run: |
          docker run \
          --rm --privileged \
          -v ./vyos-build/:/vyos \
          -w /vyos vyos/vyos-build:current \
          sudo --preserve-env \
          ./build-vyos-image \
          --architecture amd64 \
          --build-by "bartei81@gmail.com" \
          --vyos-mirror https://rolling-packages.vyos.net/current/ \
          --debian-mirror http://deb.debian.org/debian/ \
          --build-type release \
          --version "${VYOS_VERSION}" openstack

      - name: List Contents
        run: |
          ls ./vyos-build/build

#    - name: Release
#      uses: softprops/action-gh-release@v1
#      with:
#        token: ${{ secrets.PAT_TOKEN }}
#        tag_name: "v${{ env.RELEASE_VERSION }}"
#        generate_release_notes: false
#        files: |
#          vyos-build/build/vyos-${{ env.RELEASE_VERSION }}-amd64.iso